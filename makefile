# Default build, run: `make all -B`
# todo: Ideally would change pipeline to use `make all` instead of `make all -B`. Leaving -B out is preferred whenever possible, because it will theoretically only update targets and their prereqs that are outdated. But if the codebase changes, these files will be outdated but they will not appear so to make, which means we must execute using -B.

.PHONY: all build modules grouping dangling merge-reason stats additional-outputs alternative-hierarchies \
	chebi-subsets
DEFAULT_BUILD_DIR=output/build-default
DANGLING_DIR=output/analysis/dangling
# STRICT:
#  - if true, sets '--equivalent-classes-allowed none' when reasoning.
#  - Usage: `make STRICT=true merge-reason`
# todo: STRICT: consider changing the goal where this is used to do '--equivalent-classes-allowed asserted-only' instead
STRICT ?= false

# All ------------------------------------------------------------------------------------------------------------------
# todo: remove 'all' and 'build' as is and replace with: 'all: documentation/stats.md'. Should be same result.
all: build additional-outputs

build: grouping dangling modules merge-reason stats

additional-outputs: alternative-hierarchies

# Core modules ---------------------------------------------------------------------------------------------------------
# MODULE_FILES: Replaced by '.main-modules-built. Leaving this commented for reference that these are the files that are generated by that goal.  
#MODULE_FILES = \
#	$(DEFAULT_BUILD_DIR)/loinc-snomed-equiv.owl \
#	$(DEFAULT_BUILD_DIR)/loinc-term-primary-def.owl \
#	$(DEFAULT_BUILD_DIR)/loinc-term-supplementary-def.owl \
#	$(DEFAULT_BUILD_DIR)/loinc-terms-list-all.owl \
#	$(DEFAULT_BUILD_DIR)/loinc-part-hierarchy-all.owl \
#	$(DEFAULT_BUILD_DIR)/loinc-part-list-all.owl \
#	$(DEFAULT_BUILD_DIR)/snomed-parts.owl

output/tmp/.main-modules-built: curation/nlp-matches.sssom.tsv | output/tmp/
	comploinc build
	touch $@

modules: output/tmp/.main-modules-built

# Grouping classes -----------------------------------------------------------------------------------------------------
# todo: eventually, grouping classes will be part of `comploinc build`, and this separate part of the makefile will no longer be necessary
# todo: group_components_systems.owl will probably be removed. When that is done, update this goal.
# GROUPING_FILES: Replaced by '.grouping-modules-built. Leaving this commented for reference that these are the files that are generated by that goal.
#GROUPING_FILES = \
#	$(DEFAULT_BUILD_DIR)/group_components.owl \
#	$(DEFAULT_BUILD_DIR)/group_systems.owl \
#	$(DEFAULT_BUILD_DIR)/group_components_systems.owl \
#	$(DANGLING_DIR)/dangling.tsv

# todo: when the grouping classes put into the correct dir, can remove these mv steps
output/tmp/.grouping-modules-built: | output/tmp/
	python src/loinclib/attic/cli_run_groups.py
	mv -f output/group_components.owl $(DEFAULT_BUILD_DIR)/group_components.owl
	mv -f output/group_systems.owl $(DEFAULT_BUILD_DIR)/group_systems.owl
	mv -f output/group_components_systems.owl $(DEFAULT_BUILD_DIR)/group_components_systems.owl

grouping: output/tmp/.grouping-modules-built

# Dangling part terms --------------------------------------------------------------------------------------------------
# DANGLING_FILES: Replaced by '.dangling-outputs-built. Leaving this commented for reference that these are the files that are generated by that goal.
#DANGLING_FILES = \
#	curation/nlp-matches.sssom.tsv \
#	$(DANGLING_DIR)/nlp-matches.sssom_prop_analysis.tsv \
#	$(DANGLING_DIR)/confidence_histogram.png

output/tmp/.dangling-outputs-built: $(DANGLING_DIR)/dangling.tsv | output/tmp/
	python src/loinclib/nlp_taxonomification.py
	touch $@

dangling: output/tmp/.dangling-outputs-built

# Merging & reasoning --------------------------------------------------------------------------------------------------
STATIC_DIR = owl-files/comploinc-default
SOURCES := LOINC LOINCSNOMED all
MODELS := primary supplementary
FLAVORS := $(foreach source,$(SOURCES),$(foreach model,$(MODELS),$(source)-$(model)))

.SILENT: $(DEFAULT_BUILD_DIR)/catalog-v001-%.xml
$(DEFAULT_BUILD_DIR)/catalog-v001-%.xml: $(STATIC_DIR)/catalog-v001-%.xml
	@cp $< $@

.SILENT: $(DEFAULT_BUILD_DIR)/comploinc-%.owl
$(DEFAULT_BUILD_DIR)/comploinc-%.owl: $(STATIC_DIR)/comploinc-%.owl
	@cp $< $@

$(DEFAULT_BUILD_DIR)/comploinc-axioms.owl: $(STATIC_DIR)/comploinc-axioms.owl
	cp $< $@

$(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/comploinc-merged-reasoned-all-supplementary.owl: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/comploinc-merged-reasoned-all-supplementary.owl | $(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/
	cp $< $@

# todo: consider: '--equivalent-classes-allowed asserted-only' instead
$(DEFAULT_BUILD_DIR)/merged-and-reasoned/comploinc-merged-reasoned-%.owl: $(DEFAULT_BUILD_DIR)/catalog-v001-%.xml $(DEFAULT_BUILD_DIR)/comploinc-%.owl $(DEFAULT_BUILD_DIR)/comploinc-axioms.owl output/tmp/.main-modules-built output/tmp/.grouping-modules-built | $(DEFAULT_BUILD_DIR)/merged-and-reasoned/
	$(eval EQUIV_FLAG := $(if $(filter true,$(STRICT)),--equivalent-classes-allowed none,))
	robot --catalog $(DEFAULT_BUILD_DIR)/catalog-v001-$*.xml merge -i $(DEFAULT_BUILD_DIR)/comploinc-$*.owl reason $(EQUIV_FLAG) --output $@

merge-reason: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/comploinc-merged-reasoned-all-supplementary.owl $(foreach flavor,$(FLAVORS),$(DEFAULT_BUILD_DIR)/merged-and-reasoned/comploinc-merged-reasoned-$(flavor).owl)

# Analysis / Stats  ----------------------------------------------------------------------------------------------------
# - defs & dirs
TEMPLATE_AXIOMS_ENTITIES=src/comp_loinc/analysis/stats-main-axioms-entities.md.j2
TEMPLATE_MISC=src/comp_loinc/analysis/stats-misc.md.j2
PREFIXES_METRICS=\
	--prefix 'LOINC_PART: https://loinc.org/LP' \
	--prefix 'LOINC_TERM: https://loinc.org/' \
	--prefix 'LOINC_PART_GRP_CMP: http://comploinc//group/component/LP' \
	--prefix 'LOINC_PART_GRP_SYS: http://comploinc//group/system/LP' \
	--prefix 'LOINC_PART_GRP_CMP_SYS: http://comploinc//group/component-system/LP' \
	--prefix 'LOINC_PROP: http://loinc.org/property/' \
	--prefix 'COMPLOINC_AXIOM: https://comploinc-axioms\#' \
	--prefix 'SNOMED: http://snomed.info/'

input/analysis/:
	mkdir -p $@

output/analysis/:
	mkdir -p $@

output/tmp/:
	mkdir -p $@

$(DEFAULT_BUILD_DIR)/merged-and-reasoned/:
	mkdir -p $@

$(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/:
	mkdir -p $@

$(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/:
	mkdir -p $@

# - robot stats & markdown files
output/tmp/stats.json: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/comploinc-merged-reasoned-all-supplementary.owl | output/tmp/
	robot measure $(PREFIXES_METRICS) -i $< --format json --metrics extended --output $@
.PRECIOUS: output/tmp/stats.json

documentation/stats-main-axioms-entities.md: output/tmp/stats.json
	jinjanate src/comp_loinc/analysis/stats-main-axioms-entities.md.j2 $< > $@

documentation/stats-misc.md: output/tmp/stats.json
	jinjanate src/comp_loinc/analysis/stats-misc.md.j2 $< > $@

documentation/stats-dangling.md: curation/nlp-matches.sssom.tsv
	python src/loinclib/nlp_taxonomification.py --stats-only

# - Comparisons: SNOMED-LOINC
$(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/snomed-parts-reasoned.owl: $(DEFAULT_BUILD_DIR)/snomed-parts.owl | $(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/
	robot reason --input $< --output $@

output/tmp/subclass-rels-loinc-snomed.tsv: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/snomed-parts-reasoned.owl
	robot query -i $< --query src/comp_loinc/analysis/subclass-rels.sparql $@

# - Comparisons: LOINC
$(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/loinc-part-hierarchy-all-reasoned.owl: $(DEFAULT_BUILD_DIR)/loinc-part-hierarchy-all.owl | $(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/
	robot reason --input $< --output $@

output/tmp/subclass-rels-loinc.tsv: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/analysis/loinc-part-hierarchy-all-reasoned.owl
	robot query -i $< --query src/comp_loinc/analysis/subclass-rels.sparql $@

# - Comparisons: CompLOINC
output/tmp/subclass-rels-comploinc.tsv: $(DEFAULT_BUILD_DIR)/merged-and-reasoned/canonical/comploinc-merged-reasoned-all-supplementary.owl
	robot query -i $< --query src/comp_loinc/analysis/subclass-rels.sparql $@

# - Comparisons: all
documentation/subclass-analysis.md documentation/upset.png output/tmp/missing_comploinc_axioms.tsv: output/tmp/subclass-rels-loinc.tsv output/tmp/subclass-rels-loinc-snomed.tsv output/tmp/subclass-rels-comploinc.tsv
	python src/comp_loinc/analysis/subclass_rels.py --indir output/tmp/ --outpath-md documentation/subclass-analysis.md --outpath-upset-plot documentation/upset.png

# - Build final outputs & main command
documentation/stats.md: documentation/stats-main-axioms-entities.md documentation/stats-dangling.md documentation/subclass-analysis.md documentation/stats-misc.md
	cat documentation/stats-main-axioms-entities.md documentation/subclass-analysis.md documentation/stats-dangling.md documentation/stats-misc.md > $@

stats: documentation/stats.md

# Additional outputs ---------------------------------------------------------------------------------------------------
# - Alternative hierarchies --------------------------------------------------------------------------------------------
# - ChEBI subsets
PART_MAPPINGS=loinc_release/Loinc_2.78/AccessoryFiles/PartFile/PartRelatedCodeMapping.csv
CHEBI_URI=http://purl.obolibrary.org/obo/chebi/chebi.owl.gz
CHEBI_OWL=input/analysis/chebi.owl
CHEBI_MODULE=output/analysis/chebi_module.txt
CHEBI_OUT_BOT=output/analysis/chebi-subset-BOT.owl
CHEBI_OUT_MIREOT=output/analysis/chebi-subset-MIREOT.owl

chebi-subsets: $(CHEBI_OUT_BOT) $(CHEBI_OUT_MIREOT)

input/analysis/chebi.owl.gz: | input/analysis/
	wget -O $@ $(CHEBI_URI)

input/analysis/chebi.owl: input/analysis/chebi.owl.gz
	gunzip -c $< > $@
	rm $<

# todo: bug fix for label comment: Alwyas shows up as ' # ,'. Alternatively, I could just not include the label comment.
$(CHEBI_MODULE): $(PART_MAPPINGS) | output/analysis/
	awk -F'",' '/ebi\.ac\.uk\/chebi/ { \
		split($$0, parts, "\""); \
		for (i=1; i<=NF; i++) { \
		if (parts[i] ~ /CHEBI:/) { \
			id = parts[i]; \
			gsub(".*CHEBI:", "http://purl.obolibrary.org/obo/CHEBI_", id); \
			gsub(",.*", "", id); \
			print id " # " parts[i+1] \
		} \
		} \
	}' $< > $@

# BOT: use the SLME (Syntactic Locality Module Extractor) to extract a bottom module
# - Source: https://robot.obolibrary.org/extract
# - The BOT, or BOTTOM, -module contains mainly the terms in the seed, plus all their super-classes and the
# inter-relations between them. The module is called BOT (or BOTTOM) because it takes a view from the BOTTOM of the
# class-hierarchy upwards. Modules of this type are typically of a medium size and should be used if there is a need to
# include all super-classes in the module. This is the most widely used module type - when in doubt, use this one.
$(CHEBI_OUT_BOT): $(CHEBI_OWL) $(CHEBI_MODULE)
	robot extract --method BOT \
	--input $(CHEBI_OWL) \
	--term-file $(CHEBI_MODULE) \
	--output $@

# MIREOT: Minimum Information to Reference an External Ontology Term
# - Source: https://robot.obolibrary.org/extract
# - To specify upper and lower term files, use --upper-terms and --lower-terms. The upper terms are the upper boundaries
# of what will be extracted. If no upper term is specified, all terms up to the root (owl:Thing) will be returned. The
# lower term (or terms) is required; this is the limit to what will be extracted, e.g. no descendants of the lower term
# will be included in the result.
$(CHEBI_OUT_MIREOT): $(CHEBI_OWL) $(CHEBI_MODULE)
	robot extract --method MIREOT \
	--input $(CHEBI_OWL) \
	--lower-terms $(CHEBI_MODULE) \
	--output $@

alternative-hierarchies: chebi-subsets
